rule search_resistance_with_rgi:
    singularity:
        "docker://metagenlab/rgi:5.0.0-v3.0.4"
    threads:
        4
    input:
        "samples/{sample}/annotation/{sample}.fsa"
    output:
        "samples/{sample}/resistance/rgi.json"
    shell:
        """
        # new version
        rgi main -t contig -i {input[0]} -n {threads} -o $(dirname {output[0]})/rgi
        """

rule extract_resistance_from_ontology:
    conda:
        pipeline_path + "envs/python-r.yml"
    singularity:
        "docker://metagenlab/diag-pipeline-python-r:1.1"
    params:
        ontology_aro = ontology_file_aro,
        ontology_mo = ontology_file_mo,
        ontology_ro = ontology_file_ro,
        aro_categories = card_categories_file,
    input:
        rgi = "samples/{sample}/resistance/rgi.tsv"
    output:
        tsv = "samples/{sample}/resistance/rgi_ontology.tsv",
        xlsx = "samples/{sample}/resistance/rgi_ontology.xlsx",
    script:
        "scripts/fetch_ontology_rgi.py"

rule extract_resistance_mechanism_from_ontology:
    conda:
        pipeline_path + "envs/python-r.yml"
    singularity:
        "docker://metagenlab/diag-pipeline-python-r:1.1"
    params:
        ontology_aro = ontology_file_aro,
        ontology_mo = ontology_file_mo,
        ontology_ro = ontology_file_ro,
        aro_categories = card_categories_file,
    input:
        rgi = "samples/{sample}/resistance/rgi.tsv"
    output:
        tsv = "samples/{sample}/resistance/rgi_mechanism.tsv",
        xlsx = "samples/{sample}/resistance/rgi_mechanism.xlsx",
    script:
        "scripts/rgi_get_resistance_mechanism.py"

'''
rule generate_rgi_tsv_file_from_json_file:
    conda:
        pipeline_path + "envs/rgi.yml"
    input:
        "samples/{sample}/resistance/rgi.json"
    output:
        "samples/{sample}/resistance/rgi.tsv",

    shell:
        """
        rgi tab -i {input[0]}
        mv $(dirname {output[0]})/rgi.txt {output[0]}
        """
'''

rule generate_rgi_tsv_file_from_json_file:
    conda:
        pipeline_path + "envs/python-r.yml"
    singularity:
        "docker://metagenlab/diag-pipeline-python-r:1.1"
    input:
        "samples/{sample}/resistance/rgi.json"
    output:
        "samples/{sample}/resistance/rgi.tsv",

    script: "scripts/rgi_json2tsv.py"


rule plot_rgi:
    conda:
        pipeline_path + "envs/python-r.yml"
    singularity:
        "docker://metagenlab/diag-pipeline-python-r:1.1"
    input:
        rgi_files=expand("samples/{sample}/resistance/rgi.tsv", sample=read_naming.keys()),
        rgi_mechanism_files=expand("samples/{sample}/resistance/rgi_mechanism.tsv", sample=read_naming.keys()),
    params:
        species = lambda wildcards: all_samples.loc[read_naming.keys(), "ScientificName"],
    output:
        expand("report/resistance/{species}.svg", species=list(set(all_samples.loc[read_naming.keys(), "ScientificName"]))),
        rgi_plot="report/resistance/rgi_overview.svg",
    script:
        "scripts/plot_gene_presence_heatmap.R"


rule generate_rgi_report:
    conda:
        pipeline_path + "envs/python-r.yml"
    singularity:
        "docker://metagenlab/diag-pipeline-python-r:1.1"
    input:
        rgi_tsv_output="samples/{sample}/resistance/rgi.tsv",
        rgi_ontology="samples/{sample}/resistance/rgi_ontology.tsv",
        gene_depth_file="samples/{sample}/quality/mapping/bwa/{sample}_assembled_genome/CDS_depth.tab",
        contig_gc_depth_file="samples/{sample}/quality/mapping/bwa/{sample}_assembled_genome/contig_gc_depth_500bp_high_coverage.tab",
        samtools_depth = "samples/{sample}/quality/mapping/bwa/{sample}_assembled_genome/mapping.depth",
    params:
        sample="{sample}",
    output:
        "report/resistance/{sample}_rgi_report.html",
    script:
        "scripts/generate_rgi_html_report.py"
